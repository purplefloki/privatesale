{"version":3,"sources":["App.module.css","App.js","reportWebVitals.js","index.js"],"names":["module","exports","App","useState","walletConnected","setwalletConnected","accounts","setaccounts","web3instance","setweb3instance","contractInstance","setcontractInstance","flokiResult","setflokiResult","bnbValue","setbnbValue","a","web3","Web3","window","ethereum","console","log","eth","setProvider","enable","net","getId","request","method","params","chainId","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","getAccounts","Contract","contractabi","class","styles","contentcontainer","topbar","topbarleftalign","logo","logostaking","connectwalletbutton","connectwalletbuttonactive","onClick","infotext","buyinputcontainer","buyinputelementcontainer","onChange","e","newValue","target","value","isNaN","bnb","utils","toWei","floki","fromWei","buyinputelement","buyinputlabel","readOnly","purpleflokilabel","methods","buy","send","from","buybutton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d39145ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topbar\":\"App_topbar__1p_-f\",\"topbarleftalign\":\"App_topbarleftalign__15noU\",\"logo\":\"App_logo__2Y-cm\",\"logostaking\":\"App_logostaking__1Lxq5\",\"connectwalletbutton\":\"App_connectwalletbutton__mgAjn\",\"connectwalletbuttonactive\":\"App_connectwalletbuttonactive__1J_k2\",\"contentcontainer\":\"App_contentcontainer__3c9xX\",\"infotext\":\"App_infotext__2gCcB\",\"buyinputcontainer\":\"App_buyinputcontainer__1L9hx\",\"buyinputelementcontainer\":\"App_buyinputelementcontainer__2ybT_\",\"buyinputelement\":\"App_buyinputelement__3fgoA\",\"buyinputlabel\":\"App_buyinputlabel__134W2\",\"purpleflokilabel\":\"App_purpleflokilabel__1UqKk\",\"buybutton\":\"App_buybutton__3PL8k\"};","import { useEffect, useState } from 'react';\nimport styles from './App.module.css'\nimport Web3 from 'web3';\nimport contractabi from './media/contractabi.json'\n\nfunction App() {\n  const [walletConnected, setwalletConnected] = useState(false)\n  const [accounts, setaccounts] = useState([])\n  const [web3instance, setweb3instance] = useState(null)\n  const [contractInstance, setcontractInstance] = useState(null)\n  const [flokiResult, setflokiResult] = useState(0)\n  const [bnbValue, setbnbValue] = useState(0)\n  async function connectWallet() {\n    const web3 = new Web3();\n    if (window.ethereum) {\n      console.log(\"2s\")\n      web3.eth.setProvider(window.ethereum)\n      await window.ethereum.enable();\n      if (await web3.eth.net.getId() != 56) {\n        await window.ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [\n            {\n              chainId: `0x${(56).toString(16)}`,\n              chainName: 'Binance Smart Chain Mainnet',\n              nativeCurrency: {\n                name: 'BNB',\n                symbol: 'bnb',\n                decimals: 18,\n              },\n              rpcUrls: [\"https://bsc-dataseed.binance.org/\"],\n              blockExplorerUrls: ['https://bscscan.com/'],\n            },\n          ],\n        })\n      }\n      setaccounts(await web3.eth.getAccounts())\n      setcontractInstance(new web3.eth.Contract(\n        contractabi,\n        \"0x1BAdaAEA9EeafA837Bb8fe5666c0304BC81cF996\"\n      ))\n      setwalletConnected(true)\n      setweb3instance(web3)\n    }\n  }\n\n  function buy() {\n    contractInstance.methods.buy().send({\n      from: accounts[0],\n      value: bnbValue\n    })\n  }\n\n  function bnbChange(e){\n    var newValue = e.target.value;\n    if(!isNaN(newValue)){\n      var bnb = web3instance.utils.toWei(newValue, 'ether')\n      setbnbValue(bnb)\n      var floki = web3instance.utils.fromWei(bnb, 'gwei')\n      setflokiResult(floki*250)\n    }\n  }\n\n  return (\n    <div class={styles.contentcontainer}>\n      <div class={styles.topbar}>\n        <div class={styles.topbarleftalign}>\n          <div class={styles.logo} />\n          <p class={styles.logostaking}>Purple Floki Private Sale</p>\n        </div>\n        {walletConnected ? <div class={`${styles.connectwalletbutton} ${styles.connectwalletbuttonactive}`}>Connected</div> :\n          <div onClick={connectWallet} class={styles.connectwalletbutton}>Connect Wallet</div>}\n      </div>\n      {!walletConnected && <p class={styles.infotext}>\n        Please connect wallet!\n      </p>}\n      {walletConnected &&\n        <div class={styles.buyinputcontainer}>\n          <div class={styles.buyinputelementcontainer}>\n            <input onChange={bnbChange} class={styles.buyinputelement} />\n            <p class={styles.buyinputlabel}>BNB</p>\n          </div>\n          <div class={styles.buyinputelementcontainer}>\n            <input value={flokiResult} class={styles.buyinputelement} readOnly />\n            <p class={`${styles.buyinputlabel} ${styles.purpleflokilabel}`}>PURPLE<br/>FLOKI</p>\n          </div>\n          <div onClick={buy} class={styles.buybutton}>BUY</div>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}